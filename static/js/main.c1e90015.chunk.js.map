{"version":3,"sources":["components/Login/index.js","components/Logout/index.js","components/Dashboard/Header.js","components/Dashboard/Table.js","components/Dashboard/Add.js","components/Dashboard/Edit.js","data/index.js","components/Dashboard/index.js","components/App/index.js","index.js"],"names":["Login","setIsAuthenticated","useState","email","setEmail","password","setPassword","className","onSubmit","e","preventDefault","Swal","fire","timer","showConfirmButton","willOpen","showLoading","willClose","icon","title","text","htmlFor","id","type","name","placeholder","value","onChange","target","style","marginTop","Logout","marginLeft","onClick","showCancelButton","confirmButtonText","then","result","Header","setIsAdding","marginBottom","Table","employees","handleEdit","handleDelete","forEach","employee","i","formatter","Intl","NumberFormat","currency","minimumFractionDigits","colSpan","length","map","firstName","lastName","format","salary","date","Add","setEmployees","setFirstName","setLastName","setSalary","setDate","newEmployee","push","Edit","selectedEmployee","setIsEditing","splice","employeesData","Dashboard","setSelectedEmployee","isAdding","isEditing","filter","cancelButtonText","App","isAuthenticated","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1e90015.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nconst Login = ({ setIsAuthenticated }) => {\n  const adminEmail = 'admin@example.com';\n  const adminPassword = 'qwerty';\n\n  const [email, setEmail] = useState('admin@example.com');\n  const [password, setPassword] = useState('qwerty');\n\n  const handleLogin = e => {\n    e.preventDefault();\n\n    if (email === adminEmail && password === adminPassword) {\n      Swal.fire({\n        timer: 1500,\n        showConfirmButton: false,\n        willOpen: () => {\n          Swal.showLoading();\n        },\n        willClose: () => {\n          setIsAuthenticated(true);\n\n          Swal.fire({\n            icon: 'success',\n            title: 'Successfully logged in!',\n            showConfirmButton: false,\n            timer: 1500,\n          });\n        },\n      });\n    } else {\n      Swal.fire({\n        timer: 1500,\n        showConfirmButton: false,\n        willOpen: () => {\n          Swal.showLoading();\n        },\n        willClose: () => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Error!',\n            text: 'Incorrect email or password.',\n            showConfirmButton: true,\n          });\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"small-container\">\n      <form onSubmit={handleLogin}>\n        <h1>Admin Login</h1>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"admin@example.com\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"qwerty\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n        <input style={{ marginTop: '12px' }} type=\"submit\" value=\"Login\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport Swal from 'sweetalert2';\n\nconst Logout = ({ setIsAuthenticated }) => {\n  const handleLogout = () => {\n    Swal.fire({\n      icon: 'question',\n      title: 'Logging Out',\n      text: 'Are you sure you want to log out?',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n    }).then(result => {\n      if (result.value) {\n        Swal.fire({\n          timer: 1500,\n          showConfirmButton: false,\n          willOpen: () => {\n            Swal.showLoading();\n          },\n          willClose: () => {\n            setIsAuthenticated(false);\n          },\n        });\n      }\n    });\n  };\n\n  return (\n    <button\n      style={{ marginLeft: '12px' }}\n      className=\"muted-button\"\n      onClick={handleLogout}\n    >\n      Logout\n    </button>\n  );\n};\n\nexport default Logout;\n","import React from 'react';\n\nimport Logout from '../Logout';\n\nconst Header = ({ setIsAdding, setIsAuthenticated }) => {\n  return (\n    <header>\n      <h1>Employee Management Software</h1>\n      <div style={{ marginTop: '30px', marginBottom: '18px' }}>\n        <button onClick={() => setIsAdding(true)}>Add Employee</button>\n        <Logout setIsAuthenticated={setIsAuthenticated} />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Table = ({ employees, handleEdit, handleDelete }) => {\n  employees.forEach((employee, i) => {\n    employee.id = i + 1;\n  });\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: null\n  });\n\n  return (\n    <div className=\"contain-table\">\n      <table className=\"striped-table\">\n        <thead>\n          <tr>\n            <th>No.</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Salary</th>\n            <th>Date</th>\n            <th colSpan={2} className=\"text-center\">\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {employees.length > 0 ? (\n            employees.map((employee, i) => (\n              <tr key={employee.id}>\n                <td>{i + 1}</td>\n                <td>{employee.firstName}</td>\n                <td>{employee.lastName}</td>\n                <td>{employee.email}</td>\n                <td>{formatter.format(employee.salary)}</td>\n                <td>{employee.date} </td>\n                <td className=\"text-right\">\n                  <button\n                    onClick={() => handleEdit(employee.id)}\n                    className=\"button muted-button\"\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td className=\"text-left\">\n                  <button\n                    onClick={() => handleDelete(employee.id)}\n                    className=\"button muted-button\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={7}>No Employees</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nconst Add = ({ employees, setEmployees, setIsAdding }) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [salary, setSalary] = useState('');\n  const [date, setDate] = useState('');\n\n  const handleAdd = e => {\n    e.preventDefault();\n\n    if (!firstName || !lastName || !email || !salary || !date) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'Error!',\n        text: 'All fields are required.',\n        showConfirmButton: true\n      });\n    }\n\n    const id = employees.length + 1;\n    const newEmployee = {\n      id,\n      firstName,\n      lastName,\n      email,\n      salary,\n      date\n    };\n\n    employees.push(newEmployee);\n    setEmployees(employees);\n    setIsAdding(false);\n\n    Swal.fire({\n      icon: 'success',\n      title: 'Added!',\n      text: `${firstName} ${lastName}'s data has been Added.`,\n      showConfirmButton: false,\n      timer: 1500\n    });\n  };\n\n  return (\n    <div className=\"small-container\">\n      <form onSubmit={handleAdd}>\n        <h1>Add Employee</h1>\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          id=\"firstName\"\n          type=\"text\"\n          name=\"firstName\"\n          value={firstName}\n          onChange={e => setFirstName(e.target.value)}\n        />\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          id=\"lastName\"\n          type=\"text\"\n          name=\"lastName\"\n          value={lastName}\n          onChange={e => setLastName(e.target.value)}\n        />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <label htmlFor=\"salary\">Salary ($)</label>\n        <input\n          id=\"salary\"\n          type=\"number\"\n          name=\"salary\"\n          value={salary}\n          onChange={e => setSalary(e.target.value)}\n        />\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={e => setDate(e.target.value)}\n        />\n        <div style={{ marginTop: '30px' }}>\n          <input type=\"submit\" value=\"Add\" />\n          <input\n            style={{ marginLeft: '12px' }}\n            className=\"muted-button\"\n            type=\"button\"\n            value=\"Cancel\"\n            onClick={() => setIsAdding(false)}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Add;\n","import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nconst Edit = ({ employees, selectedEmployee, setEmployees, setIsEditing }) => {\n  const id = selectedEmployee.id;\n\n  const [firstName, setFirstName] = useState(selectedEmployee.firstName);\n  const [lastName, setLastName] = useState(selectedEmployee.lastName);\n  const [email, setEmail] = useState(selectedEmployee.email);\n  const [salary, setSalary] = useState(selectedEmployee.salary);\n  const [date, setDate] = useState(selectedEmployee.date);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n\n    if (!firstName || !lastName || !email || !salary || !date) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'Error!',\n        text: 'All fields are required.',\n        showConfirmButton: true\n      });\n    }\n\n    const employee = {\n      id,\n      firstName,\n      lastName,\n      email,\n      salary,\n      date\n    };\n\n    for (let i = 0; i < employees.length; i++) {\n      if (employees[i].id === id) {\n        employees.splice(i, 1, employee);\n        break;\n      }\n    }\n\n    setEmployees(employees);\n    setIsEditing(false);\n\n    Swal.fire({\n      icon: 'success',\n      title: 'Updated!',\n      text: `${employee.firstName} ${employee.lastName}'s data has been updated.`,\n      showConfirmButton: false,\n      timer: 1500\n    });\n  };\n\n  return (\n    <div className=\"small-container\">\n      <form onSubmit={handleUpdate}>\n        <h1>Edit Employee</h1>\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          id=\"firstName\"\n          type=\"text\"\n          name=\"firstName\"\n          value={firstName}\n          onChange={e => setFirstName(e.target.value)}\n        />\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          id=\"lastName\"\n          type=\"text\"\n          name=\"lastName\"\n          value={lastName}\n          onChange={e => setLastName(e.target.value)}\n        />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <label htmlFor=\"salary\">Salary ($)</label>\n        <input\n          id=\"salary\"\n          type=\"number\"\n          name=\"salary\"\n          value={salary}\n          onChange={e => setSalary(e.target.value)}\n        />\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={e => setDate(e.target.value)}\n        />\n        <div style={{ marginTop: '30px' }}>\n          <input type=\"submit\" value=\"Update\" />\n          <input\n            style={{ marginLeft: '12px' }}\n            className=\"muted-button\"\n            type=\"button\"\n            value=\"Cancel\"\n            onClick={() => setIsEditing(false)}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Edit;\n","const employeesData = [\n  \n];\n\nexport { employeesData };\n","import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nimport Header from './Header';\nimport Table from './Table';\nimport Add from './Add';\nimport Edit from './Edit';\n\nimport { employeesData } from '../../data';\n\nconst Dashboard = ({ setIsAuthenticated }) => {\n  const [employees, setEmployees] = useState(employeesData);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleEdit = id => {\n    const [employee] = employees.filter(employee => employee.id === id);\n\n    setSelectedEmployee(employee);\n    setIsEditing(true);\n  };\n\n  const handleDelete = id => {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, cancel!',\n    }).then(result => {\n      if (result.value) {\n        const [employee] = employees.filter(employee => employee.id === id);\n\n        Swal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: `${employee.firstName} ${employee.lastName}'s data has been deleted.`,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n\n        setEmployees(employees.filter(employee => employee.id !== id));\n      }\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      {!isAdding && !isEditing && (\n        <>\n          <Header\n            setIsAdding={setIsAdding}\n            setIsAuthenticated={setIsAuthenticated}\n          />\n          <Table\n            employees={employees}\n            handleEdit={handleEdit}\n            handleDelete={handleDelete}\n          />\n        </>\n      )}\n      {isAdding && (\n        <Add\n          employees={employees}\n          setEmployees={setEmployees}\n          setIsAdding={setIsAdding}\n        />\n      )}\n      {isEditing && (\n        <Edit\n          employees={employees}\n          selectedEmployee={selectedEmployee}\n          setEmployees={setEmployees}\n          setIsEditing={setIsEditing}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from 'react';\n\nimport Login from '../Login';\nimport Dashboard from '../Dashboard';\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  return (\n    <>\n      {isAuthenticated ? (\n        <Dashboard setIsAuthenticated={setIsAuthenticated} />\n      ) : (\n        <Login setIsAuthenticated={setIsAuthenticated} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}